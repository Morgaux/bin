#!/bin/sh
# shellcheck disable=SC2116

##
# sync local git repo
##

[ -x "$(command -v git)" ] || exit 1

SELF="$(basename "$0")"
PIDFILE="$HOME/var/${SELF}.pid"
CURENT_DIR="$PWD"
PATH="$HOME/bin:$PATH"

if [ -f "$PIDFILE" ] ; then
	ps -p "$(cat "$PIDFILE")" >/dev/null 2>&1 && exit 1
	rm "$PIDFILE"
fi

echo "$$" > "$PIDFILE" || exit 1

##
# Begin daemonizable code
##

usage() { # {{{
	echo "$SELF - sync your git repos"
	echo ""
	echo "usage:"
	echo "	$SELF [OPTIONS] PATH ..."
	echo ""
	echo "PATH:"
	echo "	A valid path to a valid git repository. One or more may"
	echo "	be given separated by spaces. Paths are assumed to be"
	echo "	relative to './' but may be given as absolute, '/' for"
	echo "	root and '~/' for \$HOME"
	echo ""
	echo "OPTIONS:"
	echo "	NONE YET"
	echo ""
	exit 0
} # }}}

[ "$#" -gt 0 ] || { # {{{
	rm "$PIDFILE" || exit 1
	exec "$0" .
} # }}}

while [ "$#" -gt 0 ] ; do
	cd "$CURENT_DIR" || exit 2

	case "$1" in
		"~"*) REPO="$(echo "$1")" ;; # expand ~/
		"/"*) REPO="$1"           ;;
		*)    REPO="$1"           ;;
	esac
	shift

	[ -d "$REPO/.git" ] || continue
	cd "$REPO" || cd "$CURENT_DIR" || exit 2
	URL="$(git config --get remote.origin.url)"
	REMOTE="$(git ls-remote "$URL" HEAD | awk '{print $1}')"
	LOCAL="$(git rev-parse HEAD)"
	[ "$REMOTE" = "$LOCAL" ] && continue
	git pull
	cd "$CURENT_DIR" || exit 1
done

##
# End daemonizable code
##

log "done, removing PID file"
rm "$PIDFILE" || exit 1

exit 0

